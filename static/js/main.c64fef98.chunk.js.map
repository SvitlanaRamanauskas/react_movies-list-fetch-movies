{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","_ref$setMovies","setMovies","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","setMovie","_useState5","_useState6","titleHasError","setTitleHasError","_useState7","_useState8","query","setQuery","handleOnSubmit","trim","fetch","concat","then","res","json","catch","Response","Error","getMovie","data","Title","toLowerCase","includes","Plot","Poster","imdbID","normalizeMovieData","finally","_Fragment","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onClick","disabled","some","m","_toConsumableArray","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c64fef98.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\n\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\nfunction normalizeMovieData(data: MovieData): Movie {\n  return {\n    title: data.Title || 'Unknown Title',\n    description: data.Plot || 'No description available',\n    imgUrl: data.Poster !== 'N/A'\n      ? data.Poster\n      : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n    imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n    imdbId: data.imdbID || 'Unknown IMDb ID',\n  };\n}\n\ntype Props = {\n  movies: Movie[],\n  setMovies: (newMovies: Movie[]) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  movies,\n  setMovies = () => {},\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [titleHasError, setTitleHasError] = useState(false);\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setTitleHasError(false);\n  };\n\n  const handleOnSubmit = () => {\n    setLoading(true);\n\n    if (query.trim() !== '') {\n      getMovie(query)\n        .then((data: MovieData | ResponseError) => {\n          if ('Title' in data) {\n            const foundMovie = data.Title.toLowerCase()\n              .includes(query.toLowerCase());\n\n            if (!foundMovie) {\n              setTitleHasError(true);\n              setMovie(null);\n            } else {\n              setMovie(normalizeMovieData(data as MovieData));\n            }\n          } else if ('Error' in data) {\n            setTitleHasError(true);\n            setMovie(null);\n          }\n        })\n        .finally(() => setLoading(false));\n    } else {\n      setLoading(false);\n      setMovie(null);\n    }\n  };\n\n  const listIncludesMovie = () => {\n    return movies.some(m => m.imdbId === movie?.imdbId);\n  };\n\n  const handleAddClick = () => {\n    if (movie && !listIncludesMovie()) {\n      setMovies([...movies, movie]);\n    }\n\n    setQuery('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          handleOnSubmit();\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${!loading && !movie && titleHasError && query && ('is-danger')}`}\n              value={query}\n              onChange={handleQueryChange}\n            />\n          </div>\n          {!loading && !movie && titleHasError && query && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={`${loading ? 'button is-loading' : 'button is-light'}`}\n              onClick={handleOnSubmit}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddClick}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          <MovieCard movie={movie as Movie} />\n\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=15821303';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}